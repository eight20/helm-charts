# Ingress-class annotation to manage
ingressClass: merge

# Label selector for ConfigMap objects to be monitored for changes
# e.g. "merge.ingress.kubernetes.io=owned"
configMapSelector: "merge.ingress.kubernetes.io=owned"
# This namespace will be applied to all the confiMaps
configNamespace: istio-system
# Label selector for Ingress objects to be monitored for changes
ingressSelector: ""

# List of annotations that will cause a ConfigMap to be ignored if present
# e.g. "control-plane.alpha.kubernetes.io/leader"
configMapWatchIgnore: []

# List of annotations that will cause an Ingress to be ignored if present
ingressWatchIgnore: []

conf:
  main-ingress:
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-port: '15020'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: environment=production
  ops-ingress:
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-port: '15020'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: environment=production

rbac:
  create: true
  serviceAccountName: default

image:
  repository: jakubkulhan/ingress-merge
  tag: latest
  pullPolicy: Always


resources: 
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi


nodeSelector: {}

tolerations: []

affinity: {}
