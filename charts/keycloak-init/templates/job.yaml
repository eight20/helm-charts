
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: keycloak
  name: keycloak-init
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded
rules:
- apiGroups: [""]
  resources:
  - secrets
  - namespaces
  - pods/exec
  - pods
  verbs:
  - 'delete'
  - 'create'
  - 'patch'
  - 'get'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: keycloak-init
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded
subjects:
- kind: ServiceAccount
  name: sa-keycloak-init
  namespace: keycloak
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: keycloak-init
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-keycloak-init
  namespace: keycloak
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: hook-succeeded
---
{{- if .Values.backupConfig }}
apiVersion: batch/v1
kind: Job
metadata:
  name: db-import-{{ include "keycloak-init.fullname" . }}-job 
  namespace: keycloak
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 5
  backoffLimit: 2
  template:
    spec:
      containers:
      - name: keycloak-init
        image: "bitnami/kubectl:latest"
        command:
          - /bin/sh
          - -c
          - kubectl exec keycloak-0 -c keycloak  -i -t -- bash -ilc "/opt/jboss/keycloak/bin/kcadm.sh config credentials --server {{.Values.keycloak.host}} --realm master --user keycloak --password {{ .Values.secrets.keycloakPassword }} && /opt/jboss/keycloak/bin/kcadm.sh update realms/demorealm -f {{ .Values.backupConfig.config }} || exit 0"
        env:
          - name: KEYCLOAK_HOST
            value: {{ .Values.keycloak.host }}
          - name: KEYCLOAK_USER
            value: {{ .Values.keycloak.user }}
      restartPolicy: OnFailure
      serviceAccountName: sa-keycloak-init
---
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: db-migrate-{{ include "keycloak-init.fullname" . }}-job 
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 5
  backoffLimit: 2
  template:
    spec:
      securityContext:
        runAsUser: 0
      containers:
      - name: keycloak-init
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command: ["/migrate/client-secret"]
        env:
          - name: NAMESPACES
            value: "{{ include "helm-toolkit.utils.joinListWithComma" .Values.oidcSecret.namespaces }}"
          - name: KEYCLOAK_HOST
            value: {{ .Values.keycloak.host }}
          - name: KEYCLOAK_USER
            value: {{ .Values.keycloak.user }}
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-http
                key: password
        volumeMounts:
          - mountPath: /migrate/client-secret
            name: client-secret
            subPath: client-secret
            readOnly: true
      volumes:
        - name: client-secret
          configMap:
            name: {{ include "keycloak-init.fullname" . }}-script
            defaultMode: 0744
      restartPolicy: OnFailure
      serviceAccountName: sa-keycloak-init
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "keycloak-init.fullname" . }}-script"
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-weight: "-2"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
data:
  client-secret: |-
{{ .Files.Get "files/client_secret.sh" | indent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ include "keycloak-init.fullname" . }}-complete"
type: Opaque
data:
  INIT_DONE: VHJ1ZQ==